#!/bin/bash -e

eval "$(cli-shezargs $@)"

die() {
  echo "Usage: $0 IP dbIp utilIp namespace color key instance-type aws-image-id build-num msg" 2>&1
  echo ""
  echo "          --ip=10.11.23.91 --db=10.11.21.229 --util=10.11.21.4 --namespace=mario --color=teal --key=mario_demo --instance-type=c4.xlarge --image-id=trusty --build-number=20 --msg='tester' --bucket-namespace=mobilewebprint" 2>&1
  echo "          --ip=10.11.23.91 --db=10.11.21.229 --util=10.11.21.4 --namespace=mario --color=teal --key=mario_demo --instance-type=t2.large  --image-id=trusty --build-number=20 --msg='tester' --bucket-namespace=mobilewebprint" 2>&1
  echo ""
  echo "  Options:"
  echo ""
  echo "          --dry-run"
  echo "          --no-ruby"
  echo "          --skip-ami"
  echo "          --no-terminate"
  exit 1
}

start_dir="$(dirname $0)"

[[ -n $ip                   ]] || die
[[ -n $db                   ]] || die
[[ -n $util                 ]] || die
[[ -n $namespace            ]] || die
[[ -n $color                ]] || die
[[ -n $key                  ]] || die
[[ -n $instance_type        ]] || die
[[ -n $image_id             ]] || die
[[ -n $build_number         ]] || die
[[ -n $msg                  ]] || die
[[ -n $bucket_namespace     ]] || die

run_instance_params="$run_instance_params --db=$db"
run_instance_params="$run_instance_params --util=$util"
run_instance_params="$run_instance_params --namespace=$namespace"
run_instance_params="$run_instance_params --color=$color"
run_instance_params="$run_instance_params --key=$key"
run_instance_params="$run_instance_params --ip=${ip}"
run_instance_params="$run_instance_params --instance-type=$instance_type"
run_instance_params="$run_instance_params --image-id=$image_id"

# -------------------- Run Instance --------------------
run_instance_result="/tmp/js-aws-boot-instance-$$.json"
if [[ -z $dry_run ]]; then
       ra invoke `fn ${start_dir}/../../ ec2\.js$` runInstance $run_instance_params --first-buildup --jsaws-boot | tee $run_instance_result | underscore print --color
else
  echo ra invoke `fn ${start_dir}/../../ ec2\.js$` runInstance $run_instance_params --first-buildup --jsaws-boot
  exit 0
fi

# Get the actual IP from the result
ip="$(cat $run_instance_result | underscore select '.InstanceId ~ .PrivateIpAddress' --outfmt=text)"
instance_id="$(cat $run_instance_result | underscore select '.PrivateIpAddress ~ .InstanceId' --outfmt=text)"

wait_for_start $ip

# Copy buildout scripts
sshix $ip 'mkdir -p zz_packages/boot zz_packages/build-logs'
scpix -r ${start_dir}/* "${ip}:~/zz_packages/boot/"

# -------------------- aa-build-all --------------------

                     build_all_params="$build_all_params ${bucket_namespace}"
[[ -n $no_ruby ]] && build_all_params="$build_all_params --no-ruby"

ra invoke `fn ${start_dir}/../../ ssh\.js$` sshRun --ip=${ip} --command="./zz_packages/boot/on-instance/aa-build-all ${build_all_params}"            --message="${msg}-build"

# -------------------- Create AMI ----------------------
[[ -n $skip_ami ]] && exit 0

create_ami_result="/tmp/js-aws-create-ami-$$.json"
time ra invoke `fn ${start_dir}/../../ ec2\.js$` createAmi --instance-id=${instance_id} --description="jsaws-built" --name="jsaws-base-${build_number}-net" \
      | tee $create_ami_result \
      | underscore print --color

image_id="$(cat $create_ami_result | underscore select '.ImageId' --outfmt=text)"
aws ec2 create-tags --resources $image_id --tags "Key=jsaws:readyFor,Value=test"

sleep 5
wait_for_start $ip

# -------------------- Terminate Instance ----------------------
if [[ -z $no_terminate ]]; then
  ra invoke lib/ec2/ec2.js terminateInstance --instance-id=${instance_id} | underscore print --color
fi



